Esta es la historia de Fernando

Fernando tiene 26 años y nació en México,
viviendo en Morelos

Hoy hablaremos de su historia.

Cuando sale en camara parece alto pero la verdad ni es tan alto.

Ahora se encuentra aprendiendo git y github, lo aprendido en ester curso
es que git almacena o trabaja con archivos de texto plano, tambien
existen varios comando para empezar a trabaja con git:
° git init: Es para inicializar el archivo git en el cual vamos a 
almacenar todos los cambios que vayamos realizando.
°git status: Con el comando git status nos sirve para poder checar 
los cambios que se realizaran y poder enviarlos al repositorio.
°git add . : Este comando es para poder agregar los cambios y pasarlos 
a la memoria Ram, antes de mandarlos al repositorio.
°git commit -m "Aqui va el nombre o descripción del cambio: Con este comando podremos enviar los cambios al repositoiro
y actualizar el proyecto, tambien tendremos que darle al cambio un nombre
o una descripcion del cambio que se realizo.
°cat nombre del archivo.txt: Nos mostrará lo que se encuentra dentro del
archivo que seleccionamos.
°git log nombre del archivo.txt: Nos mostrará todos los cambios que se han
realizado.
°git show nombre del archivo.txt: Nos mostrará el ultimo cambio mas 
reciente
°git diff Aqui va el codigo del commit Aqui tambien va el codigo del comit:
Nos mostrara las diferencias que haya entre dos cambios que se hayan
realizado.
°git reset aqui va el codigo del commit --hard o soft: El hard nos
regresara al cambio que queramos borrando el resto, el soft regresa a la
version anterior y sigue disponible el cambio.
°git stat: Nos aparecerá los cambios especificos, en cuales archivos apartir
del commit.
°git checkout nombre de la rama: Nos dirigirá a la rama que deseamos
°git checkout ID del cambio que queremos ver como era originalmente nombre 
del archivo: nos mostrará el archivo como era antes
°git branch nombre de la rama a crear: Se utiliza para crear una rama.
°git branch: Nos mostrará las ramas que se encuentrana creadas dentro del
proyecto. 
°git checkout master: Vuelve a la versión master, la versión mas
actualizada.
Para mantener un checkout de manera permanente se tiene que relizar
commit para que se apliquen los cambios y quede como el mas actualizado.
°git merge nombre de la rama a fucionar: Funciona para fusionar una rama
con el master y de esa manera
fusionar o combinarlos.

*******Comenzando con Github*******
°git remote add origin URL del repositotio a clonar: Este comando nos 
permite clonara un repositorio de GitHub mediante una URL
°git remote -v: Nos mostrará orin a los que le podremos hacer fetch y
push.
°git push origin master: Nos permiye que enviar al origen la rama master
pero primero se tiene realizar el merge y el fetch (pull).
°git pull origin master: Este comando actualizará el orin remotp en caso de
que se hayan realizado cambios del repositorio remoto y esto se tiene que hacer
nates de realizar un push.
°git rm --cached: Elimina los archivos de nuestro repositorio local y del 
área de staging, pero los mantiene en nuestro disco duro. Básicamente le 
dice a Git que deje de trackear el historial de cambios de estos archivos,
por lo que pasaran a un estado untracked.
°git rm --force: Elimina los archivos de Git y del disco duro. Git siempre
guarda todo, por lo que podemos acceder al registro de la existencia de los
archivos, de modo que podremos recuperarlos si es necesario (pero debemos
usar comandos más avanzados).